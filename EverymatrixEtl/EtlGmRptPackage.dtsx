<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/11/2016 4:01:37 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="OPTIPLEX"
  DTS:CreatorName="OPTIPLEX\Mario"
  DTS:DTSID="{09F4723F-6CB5-489D-BF61-CE04EA0BE657}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.1601.5"
  DTS:LocaleID="1033"
  DTS:ObjectName="EtlGmRptPackage"
  DTS:PackageType="5"
  DTS:VersionBuild="110"
  DTS:VersionGUID="{58B09499-3FB5-48AE-9954-F46BCE1A548B}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[.\SQLEXPRESS.gzDevDb]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{640072FE-8A8F-4CA5-9925-6B9AB3A5E593}"
      DTS:ObjectName=".\SQLEXPRESS.gzDevDb">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.\SQLEXPRESS;Initial Catalog=gzDevDb;Integrated Security=True;Application Name=SSIS-EtlGmRptPackage-{640072FE-8A8F-4CA5-9925-6B9AB3A5E593}.\SQLEXPRESS.gzDevDb;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{2BA9CFE8-106A-4636-B7CE-D5618BD788FF}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::InputFullPath]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=D:\sc\gz\inRpt\gm_dev_201506.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[gzDevAzure]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{D1719C09-104C-4DC9-833A-3AAE12523B7C}"
      DTS:ObjectName="gzDevAzure">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=tcp:gzdbdev.database.windows.net;User ID=gzdbdevsa;Initial Catalog=gzDbDev;Persist Security Info=True;Application Name=SSIS-Package-{D1719C09-104C-4DC9-833A-3AAE12523B7C}tcp:gzdbdev.database.windows.net.gzDbDev.gzdbdevsa;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAI5Ols6ju+kG5oRXNMFgrmAAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAACO9BvgZ9244Mz4KFe98jBzNMWVtUOSFuQNAM7C0lHSowAAAAAOgAAAAAIAACAAAAD9loIPf5icpg6WR1J2RMzkHgmHeeg/X89I4m82oOsuriAAAAAcQmcL1OFq0nPlbq4BHw6zX3rA6nIUg9pOJno9gecJ8kAAAACl1bRM1Lq7Qs1aFACYNFdCYVUHzG0snkozCIVmwTsdisPfdWeuy4k/W4CHGh69HMgxPoDWRgPsU285bF0aCC1/</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[outRpt]"
      DTS:CreationName="FILE"
      DTS:DTSID="{1ED2E44C-F82F-4B5D-80F6-268F9163374A}"
      DTS:ObjectName="outRpt">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="2"
          DTS:ConnectionString="D:\sc\gz\outRpt" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{20DF320D-4A51-4BAD-9188-5D32FBA8C2F2}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::RootFolder] + &quot;\\outRpt\\&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchiveFolder">
      <DTS:VariableValue
        DTS:DataType="8">D:\sc\gz\outRpt\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EFF9BB80-D988-43C1-8AD3-274F00AAD98B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ExcelFiles">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4F83F79D-B5A2-4202-B881-B214ABEF0419}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileYearMonthDay">
      <DTS:VariableValue
        DTS:DataType="8">20160101</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2A01F688-2ED8-4A62-8743-5BE3BCC3D171}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::RootFolder]+ &quot;\\inRpt\\&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="InputFolder">
      <DTS:VariableValue
        DTS:DataType="8">D:\sc\gz\inRpt\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8579A229-BA8C-4BCA-8242-CEE5CC844D6C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="InputFullPath">
      <DTS:VariableValue
        DTS:DataType="8">D:\sc\gz\inRpt\gm_dev_201506.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{770803EE-84C8-4E88-8C4D-C515379126EE}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::InputFolder]+&quot;StockValues.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LocalStockValues">
      <DTS:VariableValue
        DTS:DataType="8">D:\sc\gz\inRpt\StockValues.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{48847A18-6404-4251-BD99-5B7EA5733B3D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RootFolder">
      <DTS:VariableValue
        DTS:DataType="8">D:\sc\gz</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{60D7919E-A999-4222-A73C-CCB61F448901}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="StockUrl">
      <DTS:VariableValue
        DTS:DataType="8">http://ica</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Excel File Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{0984126B-5F09-4113-82BE-9925D4D009D7}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Excel File Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFromVarEnumerator"
        DTS:DTSID="{64407808-30FB-4B5F-B462-5C6F4586E519}"
        DTS:ObjectName="{64407808-30FB-4B5F-B462-5C6F4586E519}">
        <DTS:ObjectData>
          <FEEFVE
            VariableName="User::ExcelFiles" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Excel File Loop Container\Archive an Excel File System Task"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:Description="File System Task"
          DTS:DTSID="{60DD03BE-74F2-4C13-90D7-7D9244D852C0}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Archive an Excel File System Task"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="MoveFile"
              TaskOverwriteDestFile="True"
              TaskSourcePath="User::InputFullPath"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::ArchiveFolder"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Process a Excel File Data Flow Task"
          DTS:DTSID="{4912B461-FF91-4F81-9541-BB71BF2E4363}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Process an Excel File Data Flow Task"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[User ID]"
                          cachedDataType="r8"
                          cachedName="User ID"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[User ID]" />
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Gross revenue]"
                          cachedDataType="r8"
                          cachedName="Gross revenue"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Gross revenue]" />
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Currency]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Currency"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Currency]" />
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Username]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Username"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Username]" />
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Total deposits amount]"
                          cachedDataType="r8"
                          cachedName="Total deposits amount"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Total deposits amount]" />
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Net revenue]"
                          cachedDataType="r8"
                          cachedName="Net revenue"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Net revenue]" />
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Real money balance]"
                          cachedDataType="r8"
                          cachedName="Real money balance"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Real money balance]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[User ID]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[User ID]"
                          name="User ID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[User ID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Gross revenue]"
                          dataType="cy"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Gross revenue]"
                          name="Gross revenue"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Gross revenue]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Currency]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="3"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Currency]"
                          name="Currency"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Currency]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Username]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="64"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Username]"
                          name="Username"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Username]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Total deposits amount]"
                          dataType="cy"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Total deposits amount]"
                          name="Total deposits amount"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Total deposits amount]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Net revenue]"
                          dataType="cy"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Net revenue]"
                          name="Net revenue"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Net revenue]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Real money balance]"
                          dataType="cy"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Real money balance]"
                          name="Real money balance"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Real money balance]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Everymatrix Monthly Losses Report"
                  usesDispositions="true"
                  validateExternalMetadata="False"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">'Page 1$'</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[User ID]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].ExternalColumns[User ID]"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[User ID]"
                          name="User ID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Username]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].ExternalColumns[Username]"
                          length="255"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Username]"
                          name="Username"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Role]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].ExternalColumns[Role]"
                          length="255"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Role]"
                          name="Role"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Player status]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].ExternalColumns[Player status]"
                          length="255"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Player status]"
                          name="Player status"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Block reason]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].ExternalColumns[Block reason]"
                          length="255"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Block reason]"
                          name="Block reason"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Email address]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].ExternalColumns[Email address]"
                          length="255"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Email address]"
                          name="Email address"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Total deposits amount]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].ExternalColumns[Total deposits amount]"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Total deposits amount]"
                          name="Total deposits amount"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Currency]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].ExternalColumns[Currency]"
                          length="255"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Currency]"
                          name="Currency"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Net revenue]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].ExternalColumns[Net revenue]"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Net revenue]"
                          name="Net revenue"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Gross revenue]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].ExternalColumns[Gross revenue]"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Gross revenue]"
                          name="Gross revenue"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Real money balance]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].ExternalColumns[Real money balance]"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Real money balance]"
                          name="Real money balance"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].ExternalColumns[User ID]"
                          dataType="r8"
                          name="User ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].ExternalColumns[Username]"
                          dataType="wstr"
                          length="255"
                          name="Username" />
                        <externalMetadataColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].ExternalColumns[Role]"
                          dataType="wstr"
                          length="255"
                          name="Role" />
                        <externalMetadataColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].ExternalColumns[Player status]"
                          dataType="wstr"
                          length="255"
                          name="Player status" />
                        <externalMetadataColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].ExternalColumns[Block reason]"
                          dataType="wstr"
                          length="255"
                          name="Block reason" />
                        <externalMetadataColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].ExternalColumns[Email address]"
                          dataType="wstr"
                          length="255"
                          name="Email address" />
                        <externalMetadataColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].ExternalColumns[Total deposits amount]"
                          dataType="r8"
                          name="Total deposits amount" />
                        <externalMetadataColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].ExternalColumns[Currency]"
                          dataType="wstr"
                          length="255"
                          name="Currency" />
                        <externalMetadataColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].ExternalColumns[Net revenue]"
                          dataType="r8"
                          name="Net revenue" />
                        <externalMetadataColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].ExternalColumns[Gross revenue]"
                          dataType="r8"
                          name="Gross revenue" />
                        <externalMetadataColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].ExternalColumns[Real money balance]"
                          dataType="r8"
                          name="Real money balance" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Error Output].Columns[User ID]"
                          dataType="r8"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Error Output].Columns[User ID]"
                          name="User ID" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Error Output].Columns[Username]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Error Output].Columns[Username]"
                          name="Username" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Error Output].Columns[Role]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Error Output].Columns[Role]"
                          name="Role" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Error Output].Columns[Player status]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Error Output].Columns[Player status]"
                          name="Player status" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Error Output].Columns[Block reason]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Error Output].Columns[Block reason]"
                          name="Block reason" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Error Output].Columns[Email address]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Error Output].Columns[Email address]"
                          name="Email address" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Error Output].Columns[Total deposits amount]"
                          dataType="r8"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Error Output].Columns[Total deposits amount]"
                          name="Total deposits amount" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Error Output].Columns[Currency]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Error Output].Columns[Currency]"
                          name="Currency" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Error Output].Columns[Net revenue]"
                          dataType="r8"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Error Output].Columns[Net revenue]"
                          name="Net revenue" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Error Output].Columns[Gross revenue]"
                          dataType="r8"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Error Output].Columns[Gross revenue]"
                          name="Gross revenue" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Error Output].Columns[Real money balance]"
                          dataType="r8"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Error Output].Columns[Real money balance]"
                          name="Real money balance" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination."
                  name="Insert into PlayerRevRpt ADO NET Destination"
                  usesDispositions="true"
                  validateExternalMetadata="False"
                  version="2">
                  <properties>
                    <property
                      dataType="System.String"
                      description="The Destination database table name."
                      expressionType="Notify"
                      name="TableOrViewName"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."PlayerRevRpt"</property>
                    <property
                      dataType="System.Int32"
                      description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                      expressionType="Notify"
                      name="BatchSize">0</property>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                      expressionType="Notify"
                      name="CommandTimeout">30</property>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                      expressionType="Notify"
                      name="UseBulkInsertWhenPossible">true</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ADONETDestination</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Connections[IDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\SQLEXPRESS.gzDevDb]"
                      connectionManagerRefId="Package.ConnectionManagers[.\SQLEXPRESS.gzDevDb]"
                      description="Managed connection manager"
                      name="IDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input]"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="ADO NET Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].Columns[Role]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Role"
                          externalMetadataColumnId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Role]"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Role]" />
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].Columns[Player status]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Player status"
                          externalMetadataColumnId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Player status]"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Player status]" />
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].Columns[Block reason]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Block reason"
                          externalMetadataColumnId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Block reason]"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Block reason]" />
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].Columns[Email address]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Email address"
                          externalMetadataColumnId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Email address]"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output].Columns[Email address]" />
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].Columns[RowNum]"
                          cachedDataType="i4"
                          cachedName="RowNum"
                          externalMetadataColumnId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[RowNum]"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component.Outputs[Output 0].Columns[RowNum]" />
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].Columns[NetLossInUSD]"
                          cachedDataType="cy"
                          cachedName="NetLossInUSD"
                          externalMetadataColumnId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[NetLossInUSD]"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component.Outputs[Output 0].Columns[NetLossInUSD]" />
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].Columns[UpdatedOnUtc]"
                          cachedDataType="date"
                          cachedName="UpdatedOnUtc"
                          externalMetadataColumnId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[UpdatedOnUtc]"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component.Outputs[Output 0].Columns[UpdatedOnUtc]" />
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].Columns[CreatedOnUtc]"
                          cachedDataType="date"
                          cachedName="CreatedOnUtc"
                          externalMetadataColumnId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[CreatedOnUtc]"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component.Outputs[Output 0].Columns[CreatedOnUtc]" />
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].Columns[YearMonth]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="6"
                          cachedName="YearMonth"
                          externalMetadataColumnId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[YearMonth]"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component.Outputs[Output 0].Columns[YearMonth]" />
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].Columns[User ID]"
                          cachedDataType="i8"
                          cachedName="User ID"
                          externalMetadataColumnId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[User ID]"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[User ID]" />
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].Columns[Username]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="64"
                          cachedName="Username"
                          externalMetadataColumnId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Username]"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Username]" />
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].Columns[Total deposits amount]"
                          cachedDataType="cy"
                          cachedName="Total deposits amount"
                          externalMetadataColumnId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Total deposits amount]"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Total deposits amount]" />
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].Columns[Currency]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3"
                          cachedName="Currency"
                          externalMetadataColumnId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Currency]"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Currency]" />
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].Columns[Net revenue]"
                          cachedDataType="cy"
                          cachedName="Net revenue"
                          externalMetadataColumnId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Net revenue]"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Net revenue]" />
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].Columns[Gross revenue]"
                          cachedDataType="cy"
                          cachedName="Gross revenue"
                          externalMetadataColumnId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Gross revenue]"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Gross revenue]" />
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].Columns[Real money balance]"
                          cachedDataType="cy"
                          cachedName="Real money balance"
                          externalMetadataColumnId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Real money balance]"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Real money balance]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[RowNum]"
                          dataType="i4"
                          name="RowNum" />
                        <externalMetadataColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[YearMonth]"
                          dataType="wstr"
                          length="6"
                          name="YearMonth" />
                        <externalMetadataColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[User ID]"
                          dataType="i8"
                          name="User ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Username]"
                          dataType="wstr"
                          length="256"
                          name="Username" />
                        <externalMetadataColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Role]"
                          dataType="wstr"
                          length="256"
                          name="Role" />
                        <externalMetadataColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Player status]"
                          dataType="wstr"
                          length="256"
                          name="Player status" />
                        <externalMetadataColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Block reason]"
                          dataType="wstr"
                          length="256"
                          name="Block reason" />
                        <externalMetadataColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Email address]"
                          dataType="wstr"
                          length="256"
                          name="Email address" />
                        <externalMetadataColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Total deposits amount]"
                          dataType="numeric"
                          name="Total deposits amount"
                          precision="19"
                          scale="255" />
                        <externalMetadataColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Currency]"
                          dataType="wstr"
                          length="3"
                          name="Currency" />
                        <externalMetadataColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Net revenue]"
                          dataType="numeric"
                          name="Net revenue"
                          precision="19"
                          scale="255" />
                        <externalMetadataColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Gross revenue]"
                          dataType="numeric"
                          name="Gross revenue"
                          precision="19"
                          scale="255" />
                        <externalMetadataColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[NetLossInUSD]"
                          dataType="numeric"
                          name="NetLossInUSD"
                          precision="19"
                          scale="255" />
                        <externalMetadataColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Real money balance]"
                          dataType="numeric"
                          name="Real money balance"
                          precision="19"
                          scale="255" />
                        <externalMetadataColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[CreatedOnUtc]"
                          dataType="dbTimeStamp"
                          name="CreatedOnUtc" />
                        <externalMetadataColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[UpdatedOnUtc]"
                          dataType="dbTimeStamp"
                          name="UpdatedOnUtc" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Outputs[ADO NET Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="ADO NET Destination Error Output"
                      synchronousInputId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Transform each player row Script Component"
                  validateExternalMetadata="False"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String FileYearMonthDay
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["FileYearMonthDay"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    // New internal variable to store the rownumber
    private int _rowNumber = 0;
    private string _yearMonth;

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

        _yearMonth = Variables.FileYearMonthDay.Substring(0, 6);
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row) {

        _rowNumber++;
        Row.RowNum = _rowNumber;

        Row.CreatedOnUtc = DateTime.UtcNow;
        Row.UpdatedOnUtc = DateTime.UtcNow;

        Row.NetLossInUSD = Row.DataConversionGrossrevenue;
        Row.YearMonth = _yearMonth;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int64 DataConversionUserID
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[0]);
        }
    }
    public bool DataConversionUserID_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String DataConversionUsername
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool DataConversionUsername_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String DataConversionCurrency
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool DataConversionCurrency_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Decimal DataConversionGrossrevenue
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[3]);
        }
    }
    public bool DataConversionGrossrevenue_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Decimal DataConversionTotaldepositsamount
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[4]);
        }
    }
    public bool DataConversionTotaldepositsamount_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Decimal DataConversionNetrevenue
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[5]);
        }
    }
    public bool DataConversionNetrevenue_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public Decimal DataConversionRealmoneybalance
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[6]);
        }
    }
    public bool DataConversionRealmoneybalance_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Int32 RowNum
    {
        set
        {
            this[7] = value;
        }
    }
    public bool RowNum_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal NetLossInUSD
    {
        set
        {
            this[8] = value;
        }
    }
    public bool NetLossInUSD_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime UpdatedOnUtc
    {
        set
        {
            this[9] = value;
        }
    }
    public bool UpdatedOnUtc_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime CreatedOnUtc
    {
        set
        {
            this[10] = value;
        }
    }
    public bool CreatedOnUtc_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String YearMonth
    {
        set
        {
            this[11] = value;
        }
    }
    public bool YearMonth_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8d802c423a984aa5a859582d03b22932.Properties.Settings.get_Default():SC_8d802c423a984aa5a859582d03b22932.Properties.Sett" +
    "ings")]

namespace SC_8d802c423a984aa5a859582d03b22932.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_8d802c423a984aa5a859582d03b22932.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{c260681e-aa0b-40d6-a45e-33ee4eba391a}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_8d802c423a984aa5a859582d03b22932</RootNamespace>
    <AssemblyName>SC_8d802c423a984aa5a859582d03b22932</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_8d802c423a984aa5a859582d03b22932" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_8d802c423a984aa5a859582d03b22932</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_8d802c423a984aa5a859582d03b22932</msb:DisplayName>
		<msb:ProjectId>{E715D960-32DD-4AD7-A147-32299B66A792}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_8d802c423a984aa5a859582d03b22932.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:Breakpoint Include="014fe11be16a466fb226cf79faa42930">
			<msb:FileName>main.cs</msb:FileName>
			<msb:ColumnNumber>9</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>92</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language></msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
		<msb:Breakpoint Include="1e16d2f79820443bad6fed999aab301d">
			<msb:FileName>main.cs</msb:FileName>
			<msb:ColumnNumber>9</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>120</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_8d802c423a984aa5a859582d03b22932")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_8d802c423a984aa5a859582d03b22932")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8d802c423a984aa5a859582d03b22932.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8d802c423a984aa5a859582d03b22932.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8d802c423a984aa5a859582d03b22932.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_8d802c423a984aa5a859582d03b22932.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_8d802c423a984aa5a859582d03b22932.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_8d802c423a984aa5a859582d03b22932.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAG+tbVcAAAAAAAAAAOAAIiALATAAABwAAAAIAAAAAAAASjoA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPg5AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAUBoAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAs
OgAAAAAAAEgAAAACAAUAgCMAAMAVAAABAAAAAAAAAEA5AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKBAAAAoCAnsEAAAEbyYAAAYWHG8RAAAKfQIAAAQqHgIo
EgAACioTMAMASQAAAAAAAAACAnsBAAAEF1h9AQAABAMCewEAAARvFAAABgMoEwAACm8aAAAGAygT
AAAKbxgAAAYDA28MAAAGbxYAAAYDAnsCAAAEbxwAAAYqHgIoIAAABioqAgMEBSgUAAAKKlICexUA
AAoCexYAAAoWlG8XAAAKKiICFigYAAAKKlICexUAAAoCexYAAAoXlG8ZAAAKKiICFygYAAAKKlIC
exUAAAoCexYAAAoYlG8ZAAAKKiICGCgYAAAKKlICexUAAAoCexYAAAoZlG8aAAAKKiICGSgYAAAK
KlICexUAAAoCexYAAAoalG8aAAAKKiICGigYAAAKKlICexUAAAoCexYAAAoblG8aAAAKKiICGygY
AAAKKlICexUAAAoCexYAAAoclG8aAAAKKiICHCgYAAAKKjoCHQOMHQAAASgbAAAKKloDLAgCHSgc
AAAKKnIBAABwcx0AAAp6OgIeA4wRAAABKBsAAAoqWgMsCAIeKBwAAAoqcgEAAHBzHQAACno+Ah8J
A4wSAAABKBsAAAoqXgMsCQIfCSgcAAAKKnIBAABwcx0AAAp6PgIfCgOMEgAAASgbAAAKKl4DLAkC
HwooHAAACipyAQAAcHMdAAAKeioCHwsDKBsAAAoqXgMsCQIfCygcAAAKKnIBAABwcx0AAAp6HgIo
HgAACioeAigfAAAKKn4CKCAAAAoCAnMkAAAGfQMAAAQCAnMlAAAGfQQAAAQqkgRyngAAcBpvIQAA
CiwVAgUCAygiAAAKDgRzBQAABm8iAAAGKkorBwIDbyMAAAYDbx4AAAYt8SoGKjoCKCMAAAoCA30F
AAAEKjoCKCMAAAoCA30GAAAEKpYCewYAAARvJAAACnKuAABwbyUAAAooJgAACm8nAAAKdBwAAAEq
HgIoIwAACiqufgcAAAQtHnLQAABw0AcAAAIoKAAACm8pAAAKcyoAAAqABwAABH4HAAAEKhp+CAAA
BCoeAoAIAAAEKhp+CQAABCoeAigrAAAKKi5zLAAABoAJAAAEKgAAAEJTSkIBAAEAAAAAAAwAAAB2
NC4wLjMwMzE5AAAAAAUAbAAAADQIAAAjfgAAoAgAAMgJAAAjU3RyaW5ncwAAAABoEgAARAEAACNV
UwCsEwAAEAAAACNHVUlEAAAAvBMAAAQCAAAjQmxvYgAAAAAAAAACAAABVxWgAQkBAAAA+gEzABYA
AAEAAAAmAAAACAAAAAkAAAAtAAAAFwAAACsAAAAQAAAABAAAABwAAAAdAAAAAQAAAAUAAAABAAAA
AAAyBAEAAAAAAAYAvwJPBwYAUwNPBwYACwI8Bw8AwwcAAAYAOAI7BgYAogI7BgYAgwI7BgYAOgM7
BgYA3wI7BgYA+AI7BgYATwI7BgYAagLKAwoAEwNYAQoA5gZYAQ4A1wZYAQoAhAZYAQYAFAToBQYA
TwHoBQoAlQhYAQYAWAjoBQYA7gE8BwYA9wZvBwYAeAYmBhIAvgEcBBIAHwIcBBIApgERBgYA0wFP
BwYA5wPoBQYAXgDoBQYATQboBQYAZwboBRYAEQAHBxYAAQAHB08AMQkAABYAIgAHBwYAeQHoBQYA
BgHoBQYAvwk7BgAAAABtAAAAAAABAAEAAQAQAAYGAAAQAAEAAQABABAAygYAADkAAwAFAAEAEAB3
CAAATQADACAAAQAQAEwIAABRAAUAJAABABAADQgAAFEABgAlAAAAEAB2B9IHUQAHACcAAAEQADwI
0gdpAAkAKwABAL8GpwABAAYEqgAGAEwIrQAGAA0IsQABAIUItQABAIUItQARAPoFuQARAJYBvQAR
APYAwQBQIAAAAADGAHEDBgABAHAgAAAAAMYAfAMGAAEAeCAAAAAAxgBsCcUAAQDNIAAAAACGGC8H
BgACANUgAAAAAIYYLwcmAAIA4CAAAAAAhgh2AMsABQD1IAAAAACGCFoEUwAFAP4gAAAAAIYINAHP
AAUAEyEAAAAAhgjsBFMABQAcIQAAAACGCKAJzwAFADEhAAAAAIYIrAVTAAUAOiEAAAAAhgiOA9MA
BQBPIQAAAACGCA4FUwAFAFghAAAAAIYIpQjTAAUAbSEAAAAAhgh/BVMABQB2IQAAAACGCK0D0wAF
AIshAAAAAIYINAVTAAUAlCEAAAAAhgjTANMABQCpIQAAAACGCMIEUwAFALIhAAAAAIYI7wUBAAUA
wSEAAAAAhghtBdgABgDYIQAAAACGCJcA3QAHAOchAAAAAIYIegTYAAgA/iEAAAAAhgixAOMACQAO
IgAAAACGCJIE2AAKACYiAAAAAIYIwgDjAAsANiIAAAAAhgiqBNgADABOIgAAAACGCPgDEAANAFki
AAAAAIYIWAXYAA4AcSIAAAAAhgCDCVMADwB5IgAAAACGAF8IUwAPAIEiAAAAAIYYLwcGAA8AoSIA
AAAAxgAQCekADwDGIgAAAADGAQkJxQATANkiAAAAAMYBbAnFABQA2yIAAAAAhhgvB/MAFQDqIgAA
AACGGC8H8wAWAPkiAAAAAIYIiwnPABcAHyMAAAAAgxgvBwYAFwAnIwAAAACTCPMG+QAXAFMjAAAA
AJMIfgH+ABcAWiMAAAAAkwiKAQMBFwBiIwAAAACWCGsICQEYAGkjAAAAAIYYLwcGABgAcSMAAAAA
kRg1Bw4BGAAAAAEAhwkAAAEA7AYAAAIAFwgAAAMAkgYAAAEAiAMAAAEAiAMAAAEAiAMAAAEAiAMA
AAEAiAMAAAEAiAMAAAEAiAMAAAEAiAMAAAEAiAMAAAEAiAMAAAEAjwAAAAIAKgEAAAMA7AYAAAQA
kgYAAAEA7AYAAAEAhwkAAAEAmwgAAAEAmwgAAAEAiAMJAC8HAQARAC8HBgAZAC8HCgApAC8HEAAx
AC8HEAA5AC8HEABBAC8HEABJAC8HEABRAC8HEABZAC8HEABhAC8HEABpAC8HBgCpAC8HBgDJAC8H
FQDZAC8HBgCZAHEDBgDhAO4DGwCZAHwDBgCRAGEJIQBxAC8HJgBxAOwGMABxABcINAB5AGQAOABx
AMcFPQB5AOQDQgB5ABEERwBxAN8FTQBxAM4FAQDxAC8HEABxAIMJUwBxAF8IUwCZAC8HBgDhAEUI
VwCZACsIXgChAC8HBgCZAAEIZAABAdYFagCZAEwJcQAJAR0JdwAhARgBfgAhAbsJhwCxAC8HjQDR
AC8HBgAuAAsAOwEuABMARAEuABsAYwEuACMAbAEuACsAlQEuADMAlQEuADsAlQEuAEMAbAEuAEsA
mwEuAFMAlQEuAFsAsgFDAGMA/AHjAGsA/AEhAXsA/AFJA3MAYwFpA3MAYwEDAAEABgAZAAcAGgAI
ABwAAAB6ABIBAABeBBYBAAA4ARoBAADwBBYBAACkCRoBAACwBRYBAACSAx4BAAASBRYBAACpCB4B
AACDBRYBAACxAx4BAAA4BRYBAADXAB4BAADGBBYBAADzBSMBAABxBRYBAACbAB4BAAB+BBYBAAC1
ACcBAACWBBYBAADGACcBAACuBBYBAAD8AxoBAABcBRYBAACPCRoBAAD3BiwBAACeATEBAABvCDYB
AgAGAAMAAgAHAAUAAgAIAAcAAgAJAAkAAgAKAAsAAgALAA0AAgAMAA8AAgANABEAAgAOABMAAgAP
ABUAAgAQABcAAgARABkAAgASABsAAgATAB0AAQAUAB8AAQAVACEAAQAWACMAAQAXACUAAQAYACcA
AQAZACkAAQAaACsAAQAbAC0AAQAcAC8AAQAdADEAAgAmADMAAgAoADUAAgApADcAAQAqADcAAgAr
ADkABIAAAAEAAAAAAAAAAAAAAAAAOgAAAAQAAAAAAAAAAAAAAJUAqAAAAAAADAAAAAAAAAAAAAAA
ngDLCAAAAAAMAAAAAAAAAAAAAACeAOgIAAAAAAQAAAAAAAAAAAAAAJUA6AUAAAAADAAAAAAAAAAA
AAAAngCcBgAAAAAAAAAAAQAAAIAHAAAAAABJRFRTVmFyaWFibGUxMDAASURUU1ZhcmlhYmxlczEw
MABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABTQ184ZDgwMmM0MjNhOTg0YWE1YTg1OTU4MmQwM2Iy
MjkzMgBJbnQzMgBHZXRJbnQ2NAA8TW9kdWxlPgBnZXRfRGF0YUNvbnZlcnNpb25Vc2VySUQASW5w
dXRJRABzZXRfTmV0TG9zc0luVVNEAG1zY29ybGliAHNldF9VcGRhdGVkT25VdGMAc2V0X0NyZWF0
ZWRPblV0YwBnZXRfRGF0YUNvbnZlcnNpb25SZWFsbW9uZXliYWxhbmNlAGRlZmF1bHRJbnN0YW5j
ZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBJbnB1dE5hbWUAZ2V0X0RhdGFD
b252ZXJzaW9uVXNlcm5hbWUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxp
bmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRp
b25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRy
aWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3Vy
YXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHly
aWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3Nl
bWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhl
Y3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBnZXRfRGF0YUNvbnZlcnNpb25Hcm9zc3JldmVudWUAZ2V0
X0RhdGFDb252ZXJzaW9uTmV0cmV2ZW51ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAEdldFN0
cmluZwBTdWJzdHJpbmcAc2V0X1llYXJNb250aABfeWVhck1vbnRoAEdldERlY2ltYWwAU3lzdGVt
LkNvbXBvbmVudE1vZGVsAFNDXzhkODAyYzQyM2E5ODRhYTVhODU5NTgyZDAzYjIyOTMyLmRsbABn
ZXRfRGF0YUNvbnZlcnNpb25Vc2VySURfSXNOdWxsAHNldF9OZXRMb3NzSW5VU0RfSXNOdWxsAHNl
dF9VcGRhdGVkT25VdGNfSXNOdWxsAHNldF9DcmVhdGVkT25VdGNfSXNOdWxsAGdldF9EYXRhQ29u
dmVyc2lvblJlYWxtb25leWJhbGFuY2VfSXNOdWxsAGdldF9EYXRhQ29udmVyc2lvblVzZXJuYW1l
X0lzTnVsbABnZXRfRGF0YUNvbnZlcnNpb25Hcm9zc3JldmVudWVfSXNOdWxsAGdldF9EYXRhQ29u
dmVyc2lvbk5ldHJldmVudWVfSXNOdWxsAHNldF9ZZWFyTW9udGhfSXNOdWxsAHNldF9Sb3dOdW1f
SXNOdWxsAGdldF9EYXRhQ29udmVyc2lvblRvdGFsZGVwb3NpdHNhbW91bnRfSXNOdWxsAGdldF9E
YXRhQ29udmVyc2lvbkN1cnJlbmN5X0lzTnVsbABTZXROdWxsAGdldF9JdGVtAHNldF9JdGVtAFN5
c3RlbQBzZXRfUm93TnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRp
b24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ASW52YWxpZE9wZXJhdGlv
bkV4Y2VwdGlvbgBTdHJpbmdDb21wYXJpc29uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0
cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAAX3Jvd051bWJlcgBJbnB1
dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAC5jdG9yAC5jY3RvcgBTeXN0
ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVz
b3VyY2VzAFNDXzhkODAyYzQyM2E5ODRhYTVhODU5NTgyZDAzYjIyOTMyLlByb3BlcnRpZXMuUmVz
b3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ184ZDgwMmM0MjNhOTg0YWE1YTg1OTU4
MmQwM2IyMjkzMi5Qcm9wZXJ0aWVzAGdldF9SZWFkT25seVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5J
bmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5lY3Rpb25zAE9iamVj
dABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABT
Y3JpcHRDb21wb25lbnQAZ2V0X0RhdGFDb252ZXJzaW9uVG90YWxkZXBvc2l0c2Ftb3VudABNaWNy
b3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0
AElucHV0MF9Qcm9jZXNzSW5wdXQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25lbnRF
dmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABnZXRfVXRjTm93AElucHV0MF9Qcm9jZXNz
SW5wdXRSb3cATmV4dFJvdwBnZXRfRmlsZVllYXJNb250aERheQBnZXRfRGF0YUNvbnZlcnNpb25D
dXJyZW5jeQBnZXRfQXNzZW1ibHkAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABj
AGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcA
bgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABl
AGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAIUYAaQBsAGUAWQBlAGEAcgBNAG8AbgB0AGgARABhAHkA
AHFTAEMAXwA4AGQAOAAwADIAYwA0ADIAMwBhADkAOAA0AGEAYQA1AGEAOAA1ADkANQA4ADIAZAAw
ADMAYgAyADIAOQAzADIALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMA
AAAARxRSuW/fFUGfLPvS2LPSYwAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERYQUgAg4ICAQAABFJ
CSADARI9HQgSQQMGEj0DBh0IBCABCggEIAECCAQgAQ4IBSABEUUIBSACAQgcAyAAAgYgAgIOEX0F
IAEdCAgFIAASgIEGIAESgIUcBQAAEoCJBiABHBKAjQgAARKAkRGAlQUgABKAmQcgAgEOEoCZCLd6
XFYZNOCJCImEXc2AgMyRAgYIAgYOAwYSFAMGEhgDBhJNAwYSWQMGEl0DBhIgBSABARIMAyAACgMg
AA4EIAARRQQgAQECBSABARFFBSABARFJCSAEAQgOEj0SQQUgAQESTQQAABJZBAAAEl0FAAEBEl0E
AAASIAMAAAEDKAAKAygAAgMoAA4EKAARRQMoAAgEKAARSQQIABJZBAgAEl0ECAASIAgBAAgAAAAA
AB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfOGQ4MDJjNDIz
YTk4NGFhNWE4NTk1ODJkMDNiMjI5MzIAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNgAASQEA
Gi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVU
IEZyYW1ld29yayA0LjUEAQAAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5S
ZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFs
LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGlt
ZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAAgOgAAAAAAAAAAAAA6OgAAACAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAALDoAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAA
AAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
QwBfADgAZAA4ADAAMgBjADQAMgAzAGEAOQA4ADQAYQBhADUAYQA4ADUAOQA1ADgAMgBkADAAMwBi
ADIAMgA5ADMAMgAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4A
MAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AOABkADgAMAAyAGMANAAy
ADMAYQA5ADgANABhAGEANQBhADgANQA5ADUAOAAyAGQAMAAzAGIAMgAyADkAMwAyAC4AZABsAGwA
AABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAg
AEAAIAAgADIAMAAxADYAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAA
AAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA4AGQAOAAw
ADIAYwA0ADIAMwBhADkAOAA0AGEAYQA1AGEAOAA1ADkANQA4ADIAZAAwADMAYgAyADIAOQAzADIA
LgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AOABkADgAMAAy
AGMANAAyADMAYQA5ADgANABhAGEANQBhADgANQA5ADUAOAAyAGQAMAAzAGIAMgAyADkAMwAyAAAA
NAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAAB
AEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABMOgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_8d802c423a984aa5a859582d03b22932</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::FileYearMonthDay</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D12.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;92&lt;/FileLine&gt;
&lt;FileColumn&gt;9&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                        <arrayElement
                          dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D12.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;120&lt;/FileLine&gt;
&lt;FileColumn&gt;9&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">0a306f74daa7565b45822d0bcbbd5b01</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">17caffac3a69114c4d0a5caaea6e042c210db3a6</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component.Inputs[Input 0].Columns[Data Conversion.User ID]"
                          cachedDataType="i8"
                          cachedName="User ID"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[User ID]"
                          name="Data Conversion.User ID" />
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component.Inputs[Input 0].Columns[Data Conversion.Username]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="64"
                          cachedName="Username"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Username]"
                          name="Data Conversion.Username" />
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component.Inputs[Input 0].Columns[Data Conversion.Currency]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3"
                          cachedName="Currency"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Currency]"
                          name="Data Conversion.Currency" />
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component.Inputs[Input 0].Columns[Data Conversion.Gross revenue]"
                          cachedDataType="cy"
                          cachedName="Gross revenue"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Gross revenue]"
                          name="Data Conversion.Gross revenue" />
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component.Inputs[Input 0].Columns[Data Conversion.Total deposits amount]"
                          cachedDataType="cy"
                          cachedName="Total deposits amount"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Total deposits amount]"
                          name="Data Conversion.Total deposits amount" />
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component.Inputs[Input 0].Columns[Data Conversion.Net revenue]"
                          cachedDataType="cy"
                          cachedName="Net revenue"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Net revenue]"
                          name="Data Conversion.Net revenue" />
                        <inputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component.Inputs[Input 0].Columns[Data Conversion.Real money balance]"
                          cachedDataType="cy"
                          cachedName="Real money balance"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Real money balance]"
                          name="Data Conversion.Real money balance" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component.Outputs[Output 0].Columns[RowNum]"
                          dataType="i4"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component.Outputs[Output 0].Columns[RowNum]"
                          name="RowNum" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component.Outputs[Output 0].Columns[NetLossInUSD]"
                          dataType="cy"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component.Outputs[Output 0].Columns[NetLossInUSD]"
                          name="NetLossInUSD" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component.Outputs[Output 0].Columns[UpdatedOnUtc]"
                          dataType="date"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component.Outputs[Output 0].Columns[UpdatedOnUtc]"
                          name="UpdatedOnUtc" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component.Outputs[Output 0].Columns[CreatedOnUtc]"
                          dataType="date"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component.Outputs[Output 0].Columns[CreatedOnUtc]"
                          name="CreatedOnUtc" />
                        <outputColumn
                          refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component.Outputs[Output 0].Columns[YearMonth]"
                          codePage="1252"
                          dataType="str"
                          length="6"
                          lineageId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component.Outputs[Output 0].Columns[YearMonth]"
                          name="YearMonth" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task.Paths[Data Conversion Output]"
                  endId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component.Inputs[Input 0]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task.Paths[Excel Source Output]"
                  endId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion.Inputs[Data Conversion Input]"
                  name="Excel Source Output"
                  startId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task.Paths[Output 0]"
                  endId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination.Inputs[ADO NET Destination Input]"
                  name="Output 0"
                  startId="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Excel File Loop Container\Set YearMonth Var Script Task"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{FA04DAC0-E4DF-48A2-9763-9F2BB99E0BCD}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set YearMonth Var Script Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_0fca816510ad446b9c676dadf620c50b"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::InputFullPath"
              ReadWriteVariables="User::FileYearMonthDay">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0fca816510ad446b9c676dadf620c50b.Properties.Settings.get_Default():ST_0fca816510ad446b9c676dadf620c50b.Properties.Sett" +
    "ings")]

namespace ST_0fca816510ad446b9c676dadf620c50b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_0fca816510ad446b9c676dadf620c50b.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3A9EC5F8-B8EA-4D70-B90D-31F3FCAAE75D}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_0fca816510ad446b9c676dadf620c50b</RootNamespace>
    <AssemblyName>ST_0fca816510ad446b9c676dadf620c50b</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;

#endregion

namespace ST_0fca816510ad446b9c676dadf620c50b
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            //MessageBox.Show((string) Dts.Variables["InputFullPath"].Value, "InputFullPath", MessageBoxButtons.OK, MessageBoxIcon.Information);
            //string connString = Dts.Connections["gzDevAzure"].ConnectionString;

		    var inputFilePath = (string) Dts.Variables["InputFullPath"].Value;
		    var dotIdx = inputFilePath.LastIndexOf('.');
		    var yearMonthStr = inputFilePath.Substring(dotIdx - 8, 8);

		    Dts.Variables["FileYearMonthDay"].Value = yearMonthStr;

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_0fca816510ad446b9c676dadf620c50b</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_0fca816510ad446b9c676dadf620c50b</msb:DisplayName>
		<msb:ProjectId>{6BABC3F0-853C-40D8-86B2-0C57A107732E}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_0fca816510ad446b9c676dadf620c50b.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:Breakpoint Include="998803254b6a4cb7958ead2761c1783a">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:LineNumber>104</msb:LineNumber>
			<msb:ColumnNumber>13</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Condition></msb:Condition>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_0fca816510ad446b9c676dadf620c50b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_0fca816510ad446b9c676dadf620c50b")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0fca816510ad446b9c676dadf620c50b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0fca816510ad446b9c676dadf620c50b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0fca816510ad446b9c676dadf620c50b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_0fca816510ad446b9c676dadf620c50b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_0fca816510ad446b9c676dadf620c50b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_0fca816510ad446b9c676dadf620c50b.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAD5HbVcAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAEi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMAtAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAGA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAD0
LQAAAAAAAEgAAAACAAUAHCEAAOwLAAABAAAAAAAAAAgtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwBaAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKdBsAAAElHy5vFAAACgoGHlkebxUAAAoLAigQAAAKbxEAAApyHQAAcG8SAAAKB28WAAAKAigQ
AAAKFm8XAAAKKh4CKBgAAAoqHgIoGQAACiqufgEAAAQtHnI/AABw0AMAAAIoGgAACm8bAAAKcxwA
AAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigdAAAKKi5zCAAABoADAAAEKkJT
SkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAANADAAAjfgAAPAQAAHwFAAAjU3RyaW5n
cwAAAAC4CQAAtAAAACNVUwBsCgAAEAAAACNHVUlEAAAAfAoAAHABAAAjQmxvYgAAAAAAAAACAAAB
Vx2iAQkDAAAA+gEzABYAAAEAAAAeAAAABQAAAAYAAAAJAAAAAQAAAB0AAAACAAAAEAAAAAEAAAAC
AAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAACTAwEAAAAAAAYAJQJjBAYAtAJjBAYAcQFQBA8A
1wQAAAYAngERBAYACAIRBAYA6QERBAYAmwIRBAYARQIRBAYAXgIRBAYAtQERBAYA0AH4AgoAeQJC
AwoA8ABCAwYAywPEAwYAVAFQBAYASgXEAwYAMwSDBAYAIwT8Aw4AJAF9Aw4AhQF9Aw4ADAHnAwYA
OQFjBAoAawNCAxIAGQWbABIAbgCbAAYAEgPEAwYAuwDEAwYAdwDEAwYAcAURBAAAAAABAAAAAAAB
AAEAAQAQANwDMQA5AAEAAQAAABAAigTmBEUAAQADAAABEAAjBeYEWQADAAcAAwEAADwFAAA9AAQA
CgARANADcwARAOAAdwARAF4AewAGBikAfwBWgCwFggBWgMAAggBQIAAAAACGAOIDBgABALYgAAAA
AIYYQwQGAAEAviAAAAAAgxhDBAYAAQDGIAAAAACTCC8EhgABAPIgAAAAAJMIyACLAAEA+SAAAAAA
kwjUAJAAAQABIQAAAACWCFEFlgACAAghAAAAAIYYQwQGAAIAECEAAAAAkRhJBJsAAgAAAAEA5gIJ
AEMEAQARAEMEBgAZAEMECgApAEMEEAAxAEMEEAA5AEMEEABBAEMEEABJAEMEEABRAEMEEABZAEME
EABhAEMEEABpAEMEBgCBAEMEBgCpAEMEFQC5AEMEBgBxADQFIADBABUFJQDJALsDKgDRANICMADZ
AOwCNADZABkDOQDRANwCPwDBAF0FAQBxAEMEBgCJAEMEBgDhAIkARADhAGwFSwCRAEMEUACxAEME
BgAIABQAaQAIABgAbgApAHMA1gAuAAsArgAuABMAtwAuABsA1gAuACMA3wAuACsACAEuADMACAEu
ADsACAEuAEMA3wAuAEsADgEuAFMACAEuAFsAJQFDAGMAbgBJAHMA1gBhAHsAbgBjAGsAbgAbAAMA
AQAEAAMAAAAzBJ8AAADoAKQAAABVBakAAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAACD
F7d8AAAAAAAAMQAAAAQAAAAAAAAAAAAAAFcAVQAAAAAADAAAAAAAAAAAAAAAYAAjAwAAAAAEAAAA
AAAAAAAAAABXAMQDAAAAAAwAAAAAAAAAAAAAAGAACgAAAAAAAAAAAAEAAACUBAAABQACAAAAAAAA
PE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU1RfMGZjYTgx
NjUxMGFkNDQ2YjljNjc2ZGFkZjYyMGM1MGIAbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAFZhcmlh
YmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291
cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5n
c0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVi
dWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dz
YWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0
cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRy
aWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25z
QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJp
YnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0
cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUA
dmFsdWUATGFzdEluZGV4T2YAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBTdHJpbmcAU3Vic3Ry
aW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2Rl
bABTVF8wZmNhODE2NTEwYWQ0NDZiOWM2NzZkYWRmNjIwYzUwYi5kbGwAZ2V0X0l0ZW0AU3lzdGVt
AEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0u
R2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VN
YW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29t
cGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzBmY2E4MTY1MTBhZDQ0NmI5YzY3NmRh
ZGY2MjBjNTBiLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBT
VF8wZmNhODE2NTEwYWQ0NDZiOWM2NzZkYWRmNjIwYzUwYi5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJs
ZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAT2JqZWN0AGdldF9EZWZh
dWx0AHNldF9UYXNrUmVzdWx0AGdldF9Bc3NlbWJseQAAAAAAG0kAbgBwAHUAdABGAHUAbABsAFAA
YQB0AGgAACFGAGkAbABlAFkAZQBhAHIATQBvAG4AdABoAEQAYQB5AABxUwBUAF8AMABmAGMAYQA4
ADEANgA1ADEAMABhAGQANAA0ADYAYgA5AGMANgA3ADYAZABhAGQAZgA2ADIAMABjADUAMABiAC4A
UAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAADgfg6VCYEsR6s6YA3n
KRLCAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFRBAcCCA4EIAASYQQgABJlBSABEmkcAyAAHAQg
AQgDBSACDggIBCABARwGAAEScRF1BCAAEnkGIAIBDhJ5CLd6XFYZNOCJCImEXc2AgMyRBAAAAAAE
AQAAAAMGEkkDBhJNAwYSEAIGCAMGERQEAAASSQQAABJNBQABARJNBAAAEhADAAABBAgAEkkECAAS
TQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgB
ACNTVF8wZmNhODE2NTEwYWQ0NDZiOWM2NzZkYWRmNjIwYzUwYgAABQEAAAAAFgEAEUNvcHlyaWdo
dCBAICAyMDE2AABHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rp
c3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNv
dXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9
bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2Vz
LlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA6C0AAAAAAAAAAAAAAi4A
AAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPQtAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3Jl
ZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQC3fIMXAAABALd8gxc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADAAZgBjAGEAOAAxADYANQAxADAAYQBkADQANAA2AGIAOQBjADYANwA2AGQAYQBk
AGYANgAyADAAYwA1ADAAYgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA2ADAAMQA5AC4AMwAxADkAMgA3AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADAAZgBjAGEAOAAxADYANQAxADAAYQBkADQANAA2AGIAOQBjADYANwA2AGQAYQBkAGYA
NgAyADAAYwA1ADAAYgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA2AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AMABmAGMAYQA4ADEANgA1ADEAMABhAGQANAA0ADYAYgA5AGMANgA3ADYA
ZABhAGQAZgA2ADIAMABjADUAMABiAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADAAZgBjAGEAOAAxADYANQAxADAAYQBkADQANAA2AGIAOQBjADYANwA2AGQA
YQBkAGYANgAyADAAYwA1ADAAYgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANgAwADEAOQAuADMAMQA5ADIANwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAwADEAOQAuADMAMQA5ADIANwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAUPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
              <Breakpoint
                Enabled="True"
                File="ScriptMain.cs"
                Line="104"
                Column="13" />
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Excel File Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{AA1D90B1-4095-40F2-B01D-5C1018F7330B}"
          DTS:From="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Excel File Loop Container\Archive an Excel File System Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Excel File Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{F5565007-05FC-4FDB-AAF0-EF72F995B0EE}"
          DTS:From="Package\Foreach Excel File Loop Container\Set YearMonth Var Script Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{06C799B8-59EE-430E-87CE-FF4585EC25B7}"
          DTS:ObjectName="{06C799B8-59EE-430E-87CE-FF4585EC25B7}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::InputFullPath" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Read Excel Filenames Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{5B28724D-57FC-4AEA-8F0F-EF1B5649BEA0}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Read Excel Filenames Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_847c721488cf4690810288545931abf1"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::InputFolder"
          ReadWriteVariables="User::ExcelFiles">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_847c721488cf4690810288545931abf1")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_847c721488cf4690810288545931abf1")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_847c721488cf4690810288545931abf1.Properties.Settings.get_Default():ST_847c721488cf4690810288545931abf1.Properties.Sett" +
    "ings")]

namespace ST_847c721488cf4690810288545931abf1.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.IO;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections;
#endregion

namespace ST_847c721488cf4690810288545931abf1
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        private ArrayList excelFiles;

		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
		    try {
		        var filelistTable = ReadExcelFilesAttr();
		        DataRow[] rows = filelistTable.Select("", "FileDate ASC");

		        excelFiles = new ArrayList();

		        foreach (DataRow row in rows) {
		            excelFiles.Add(row["InputFullPath"].ToString());
		        }

		        // Store the dataset in the SSIS variable       
		        Dts.Variables["User::ExcelFiles"].Value = excelFiles;

                Dts.TaskResult = (int)ScriptResults.Success;

            } catch (Exception ex) {

                // Fire an error for logging purposes
                string Error = "Error: " + ex.Message + " ";
                Error += ((ex.InnerException != null) ? ex.InnerException.Message : "");
                Dts.Events.FireError(0, "Main of reading excel files", Error, string.Empty, 0);

                // Close Script Task with Failure
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        /// <summary>
        /// Check validity of string date
        /// </summary>
        /// <param name="fNameWoutExt"></param>
        /// <param name="yearMonthDayStr"></param>
        /// <returns></returns>
        private bool IsYearMonthDayValid(string yearMonthDayStr) {
            bool isValid = false;

            int ymdInt;
            if (!int.TryParse(yearMonthDayStr, out ymdInt)) {

                Dts.Events.FireError(0, "int.TryParse(yearMonthDayStr)",
                    "Parsing input xlsx filename year month day number failed", string.Empty, 0);
                throw new Exception("int.TryParse(yearMonthDayStr failed");

            } else {
                DateTime yearMonthDay = new DateTime(
                    int.Parse(yearMonthDayStr.Substring(0, 4)),
                    int.Parse(yearMonthDayStr.Substring(4, 2)),
                    int.Parse(yearMonthDayStr.Substring(6, 2))
                );

                if (yearMonthDay > DateTime.Today ||  (yearMonthDay-DateTime.Today).Days > 365) {

                    Dts.Events.FireError(0, "int.TryParse(yearMonthDayStr)",
                        "Found Year Month Day string in the future or way in the past", string.Empty, 0);
                    throw new Exception("Cannot process future or older than 1 year date files");
                }

                isValid = true;
            }

            return isValid;
        }

        /// <summary>
        /// Read xlsx files in their attributes
        /// </summary>
        /// <returns></returns>
        private DataTable ReadExcelFilesAttr() {

            // Create a new table in the dataset
            DataTable filelistTable = new DataTable();
            // FullFilepath
            filelistTable.Columns.Add("InputFullPath", typeof(string));
            // Filename
            filelistTable.Columns.Add("FileName", typeof(string));
            //FileDate
            filelistTable.Columns.Add("FileDate", typeof(DateTime));

            // Get all files within the folder       
            string[] allFiles = Directory.GetFiles(Dts.Variables["User::InputFolder"].Value.ToString(), "*.xlsx");

            // Variable for storing file properties
            FileInfo fileInfo;

            // Loop through the files in the folder       
            foreach (string currentFile in allFiles) {
                // Fill fileInfo variable with file information         
                fileInfo = new FileInfo(currentFile);

                var fname = fileInfo.Name;
                var fNameWoutExt = fname.Substring(0, fname.Length - fileInfo.Extension.Length);

                var yearMonthDayStr = fNameWoutExt.Substring(fNameWoutExt.Length - 8);

                if (IsYearMonthDayValid(yearMonthDayStr)) {

                    // Choose which the file properties you will use
                    // Columns:            FilePath           FileName       FileDate
                    filelistTable.Rows.Add(fileInfo.FullName, fileInfo.Name, fileInfo.CreationTime);
                }

                if (filelistTable.Rows.Count == 0) {
                    Dts.Events.FireWarning(0, "Read Excel Files", "No files found to process", string.Empty, 0);
                }
            }
            return filelistTable;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_847c721488cf4690810288545931abf1</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_847c721488cf4690810288545931abf1</msb:DisplayName>
		<msb:ProjectId>{B0FCEF5F-1013-43F3-AC81-D3B47D34162D}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_847c721488cf4690810288545931abf1.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="ST_847c721488cf4690810288545931abf1.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{cfeb21fe-5617-4788-ba3e-7e43fddc91c6}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_847c721488cf4690810288545931abf1</RootNamespace>
    <AssemblyName>ST_847c721488cf4690810288545931abf1</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_847c721488cf4690810288545931abf1.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_847c721488cf4690810288545931abf1.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_847c721488cf4690810288545931abf1.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_847c721488cf4690810288545931abf1.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_847c721488cf4690810288545931abf1.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_847c721488cf4690810288545931abf1.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAChNbVcAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAA8jcA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKA3AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA+BcAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADU
NwAAAAAAAEgAAAACAAUA0CMAABgTAAABAAAAAAAAAOg2AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgDmAAAAAQAAEQIoAwAABnIBAABwcgMAAHBvEAAACgJz
EQAACn0BAAAEChYLKyQGB5oMAnsBAAAECHIdAABwbxIAAApvEwAACm8UAAAKJgcXWAsHBo5pMtYC
KBUAAApvFgAACnI5AABwbxcAAAoCewEAAARvGAAACgIoFQAAChZvGQAACt5oDXJbAABwCW8aAAAK
cmsAAHAoGwAAChMEEQQJbxwAAAotB3IBAABwKwsJbxwAAApvGgAACigdAAAKEwQCKBUAAApvHgAA
ChZybwAAcBEEfh8AAAoWbyAAAAomAigVAAAKF28ZAAAK3gAqAAABEAAAAAAAAH19AGgRAAABEzAG
AL8AAAACAAARFgoDEgEoIQAACi0tAigVAAAKbx4AAAoWcqcAAHBy4wAAcH4fAAAKFm8gAAAKJnJV
AQBwcyIAAAp6EgIDFhpvIwAACigkAAAKAxoYbyMAAAooJAAACgMcGG8jAAAKKCQAAAooJQAACggo
JgAACignAAAKLRoIKCYAAAooKAAACg0SAygpAAAKIG0BAAAxLQIoFQAACm8eAAAKFnKnAABwcp0B
AHB+HwAAChZvIAAACiZyFwIAcHMiAAAKehcKBioAEzAGADwBAAADAAARcyoAAAoKBm8rAAAKch0A
AHDQIgAAASgsAAAKby0AAAomBm8rAAAKcoMCAHDQIgAAASgsAAAKby0AAAomBm8rAAAKcpUCAHDQ
EgAAASgsAAAKby0AAAomAigVAAAKbxYAAApypwIAcG8XAAAKby4AAApvEwAACnLLAgBwKC8AAAoM
Fg04qQAAAAgJmnMwAAAKCwdvMQAAChMEEQQWEQRvMgAACgdvMwAACm8yAAAKWW8jAAAKJW8yAAAK
HllvNAAAChMFAhEFKAIAAAYsMgZvNQAAChmNGAAAASUWB282AAAKoiUXB28xAAAKoiUYB283AAAK
jBIAAAGibzgAAAomBm81AAAKbzkAAAotIQIoFQAACm8eAAAKFnLZAgBwcvsCAHB+HwAAChZvOgAA
CgkXWA0JCI5pP07///8GKh4CKDsAAAoqHgIoPAAACiqufgIAAAQtHnIvAwBw0AMAAAIoLAAACm89
AAAKcz4AAAqAAgAABH4CAAAEKhp+AwAABCoeAoADAAAEKhp+BAAABCoeAig/AAAKKi5zCgAABoAE
AAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAANAUAACN+AACgBQAAjAcA
ACNTdHJpbmdzAAAAACwNAACkAwAAI1VTANAQAAAQAAAAI0dVSUQAAADgEAAAOAIAACNCbG9iAAAA
AAAAAAIAAAFXHaIBCQMAAAD6ATMAFgAAAQAAAC0AAAAFAAAABwAAAAsAAAACAAAAPwAAAAIAAAAQ
AAAAAwAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAAAAEAAAAAAD4EAQAAAAAABgDDAuEFBgBSA+EF
BgAPAs4FDwBVBgAABgA8AvwEBgCmAvwEBgCHAvwEBgA5A/wEBgDjAvwEBgD8AvwEBgBTAvwEBgBu
AooDCgAXA+0DCgBqAe0DBgBSB8oGDgBcB2UABgA+BW8EBgD7AG8EBgCWBG8EDgCuAGUABgBIBTQA
BgB2BG8EBgDyAc4FBgAfB28EBgBwBQEGBgBRBdgEEgDCASgEEgAjAigEEgChAcMEBgDXAeEFCgAW
BO0DFgCXBhUBFgC4ABUBBgCyA28ECgCABe0DBgAlAG8EDgAOBWUABgA1AW8EBgDBAG8EDgCqBGUA
BgB7BzQABgBdBTQADgAjBWUADgCGAWUABgByB/wEAAAAACsAAAAAAAEAAQABABAAnwQBADkAAQAB
AAAAEAAIBmQGYQACAAUAAAEQALUGZAZ1AAQACQADAQAA7QYAAFkABQAMAAEAoQYuAREAewQyAREA
WgE2AREAkgA6AQYGXQA+AVaA3QZBAVaAOgFBAVAgAAAAAIYApQQGAAEAVCEAAAAAgQB+AEUBAQAg
IgAAAACBALsFSgECAGgjAAAAAIYYngUGAAIAcCMAAAAAgxieBQYAAgB4IwAAAACTCGwFTwECAKQj
AAAAAJMIQgFUAQIAqyMAAAAAkwhOAVkBAgCzIwAAAACWCC0HXwEDALojAAAAAIYYngUGAAMAwiMA
AAAAkRikBWQBAwAAAAEAqwUAAAEAhAMJAJ4FAQARAJ4FBgAZAJ4FCgApAJ4FEAAxAJ4FEAA5AJ4F
EABBAJ4FEABJAJ4FEABRAJ4FEABZAJ4FEABhAJ4FEABpAJ4FBgC5AJ4FBgDhAJ4FFQDxAJ4FBgCh
ACYHJwB5AJ4FBgCBAGYELwDBALADNAB5AHoAOABxAOUGPQD5AJMGQgABAWYESAAJAXoDTwD5ADkH
AQCJAKIANAARARgHVACJADUFWwARARgHYAD5APsGZgARAYUHbAAZAZQFbwAhAbkBgQCJAJ4FEAAR
AbkDiAAhAbwBjgCRAJ4FkwCRAGQHmgCRAIcEnwCRAO0EpwCZAA8HsAChAJ4FBgChAL4GwAAxAdMA
xgApAXoAzwAJAXAD2QBJAawG3QCpAJ4FEABRAeUANAARAcMDsABRAbUENAARAbkD5AChAAYH6QBR
Ae4ANABRAQQB7wBZAXoA9ABhAUgHsAAZAaQD+wBxAJ4FBgDBAJ4FBgAxAW4HBAHJAJ4FCgHpAJ4F
BgAIABgAJAEIABwAKQEpAHMAnwEuAAsAdwEuABMAgAEuABsAnwEuACMAqAEuACsA0QEuADMA0QEu
ADsA0QEuAEMAqAEuAEsA1wEuAFMA0QEuAFsA7gFDAGMAKQFJAHMAnwFjAGsAKQGBAHsAKQEbAHgA
tAADAAEABAADAAAAcAVoAQAAYgFtAQAAMQdyAQIABgADAAIABwAFAAEACAAFAAIACQAHAASAAAAB
AAAAgxesfwAAAAAAAAEAAAAEAAAAAAAAAAAAAAASAXEAAAAAAAwAAAAAAAAAAAAAABsBzgMAAAAA
BAAAAAAAAAAAAAAAEgFlAAAAAAAEAAAAAAAAAAAAAAASAW8EAAAAAAwAAAAAAAAAAAAAABsBPgAA
AAAAAAAAAAEAAAASBgAABQACAAAAAFNUXzg0N2M3MjE0ODhjZjQ2OTA4MTAyODg1NDU5MzFhYmYx
AEludDMyADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMA
dmFsdWVfXwBTeXN0ZW0uRGF0YQBtc2NvcmxpYgBBZGQASXNZZWFyTW9udGhEYXlWYWxpZABkZWZh
dWx0SW5zdGFuY2UAZ2V0X01lc3NhZ2UARGF0YVRhYmxlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFu
ZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF9OYW1lAGdldF9GdWxsTmFtZQBEYXRlVGltZQBnZXRf
Q3JlYXRpb25UaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJl
AGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmpl
Y3RNb2RlbEJhc2UASW50ZXJuYWxEYXRhQ29sbGVjdGlvbkJhc2UAQXBwbGljYXRpb25TZXR0aW5n
c0Jhc2UAVHJ5UGFyc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRy
aWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3Vy
YXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHly
aWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlD
b21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBz
ZXRfVmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBGaXJlV2FybmluZwBUb1N0
cmluZwBTdWJzdHJpbmcAZ2V0X0xlbmd0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2Rl
bABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfODQ3YzcyMTQ4OGNmNDY5MDgxMDI4ODU0NTkzMWFi
ZjEuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAG9wX0dyZWF0ZXJUaGFuAFRp
bWVTcGFuAFNjcmlwdE1haW4ARGF0YUNvbHVtbgBnZXRfRXh0ZW5zaW9uAFN5c3RlbS5Db25maWd1
cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAG9wX1N1YnRyYWN0aW9uAFN5c3RlbS5SZWZsZWN0
aW9uAERhdGFDb2x1bW5Db2xsZWN0aW9uAERhdGFSb3dDb2xsZWN0aW9uAGdldF9Jbm5lckV4Y2Vw
dGlvbgBGaWxlSW5mbwBDdWx0dXJlSW5mbwBGaWxlU3lzdGVtSW5mbwBnZXRfUmVzb3VyY2VNYW5h
Z2VyAEV2ZW50c09iamVjdFdyYXBwZXIARmlyZUVycm9yAC5jdG9yAC5jY3RvcgB5ZWFyTW9udGhE
YXlTdHIAUmVhZEV4Y2VsRmlsZXNBdHRyAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGlt
ZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfODQ3YzcyMTQ4OGNmNDY5MDgx
MDI4ODU0NTkzMWFiZjEuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01v
ZGVzAFNUXzg0N2M3MjE0ODhjZjQ2OTA4MTAyODg1NDU5MzFhYmYxLlByb3BlcnRpZXMAZ2V0X1Zh
cmlhYmxlcwBleGNlbEZpbGVzAEdldEZpbGVzAFNldHRpbmdzAGdldF9Db2x1bW5zAFN5c3RlbS5D
b2xsZWN0aW9ucwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfRXZlbnRzAGdldF9S
b3dzAGdldF9EYXlzAENvbmNhdABPYmplY3QAU2VsZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVz
dWx0AGdldF9Db3VudABBcnJheUxpc3QARGF0YVJvdwBnZXRfVG9kYXkAZ2V0X0Fzc2VtYmx5AERp
cmVjdG9yeQBFbXB0eQAAAAEAGUYAaQBsAGUARABhAHQAZQAgAEEAUwBDAAAbSQBuAHAAdQB0AEYA
dQBsAGwAUABhAHQAaAAAIVUAcwBlAHIAOgA6AEUAeABjAGUAbABGAGkAbABlAHMAAA9FAHIAcgBv
AHIAOgAgAAADIAAAN00AYQBpAG4AIABvAGYAIAByAGUAYQBkAGkAbgBnACAAZQB4AGMAZQBsACAA
ZgBpAGwAZQBzAAA7aQBuAHQALgBUAHIAeQBQAGEAcgBzAGUAKAB5AGUAYQByAE0AbwBuAHQAaABE
AGEAeQBTAHQAcgApAABxUABhAHIAcwBpAG4AZwAgAGkAbgBwAHUAdAAgAHgAbABzAHgAIABmAGkA
bABlAG4AYQBtAGUAIAB5AGUAYQByACAAbQBvAG4AdABoACAAZABhAHkAIABuAHUAbQBiAGUAcgAg
AGYAYQBpAGwAZQBkAABHaQBuAHQALgBUAHIAeQBQAGEAcgBzAGUAKAB5AGUAYQByAE0AbwBuAHQA
aABEAGEAeQBTAHQAcgAgAGYAYQBpAGwAZQBkAAB5RgBvAHUAbgBkACAAWQBlAGEAcgAgAE0AbwBu
AHQAaAAgAEQAYQB5ACAAcwB0AHIAaQBuAGcAIABpAG4AIAB0AGgAZQAgAGYAdQB0AHUAcgBlACAA
bwByACAAdwBhAHkAIABpAG4AIAB0AGgAZQAgAHAAYQBzAHQAAGtDAGEAbgBuAG8AdAAgAHAAcgBv
AGMAZQBzAHMAIABmAHUAdAB1AHIAZQAgAG8AcgAgAG8AbABkAGUAcgAgAHQAaABhAG4AIAAxACAA
eQBlAGEAcgAgAGQAYQB0AGUAIABmAGkAbABlAHMAABFGAGkAbABlAE4AYQBtAGUAABFGAGkAbABl
AEQAYQB0AGUAACNVAHMAZQByADoAOgBJAG4AcAB1AHQARgBvAGwAZABlAHIAAA0qAC4AeABsAHMA
eAAAIVIAZQBhAGQAIABFAHgAYwBlAGwAIABGAGkAbABlAHMAADNOAG8AIABmAGkAbABlAHMAIABm
AG8AdQBuAGQAIAB0AG8AIABwAHIAbwBjAGUAcwBzAABxUwBUAF8AOAA0ADcAYwA3ADIAMQA0ADgA
OABjAGYANAA2ADkAMAA4ADEAMAAyADgAOAA1ADQANQA5ADMAMQBhAGIAZgAxAC4AUAByAG8AcABl
AHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAABuCW3xN5bDT7ywRQV/M4avAAQgAQEI
AyAAAQUgAQEREQQgAQEOBSABARFtCwcFHRJBCBJBEkUOByACHRJBDg4EIAEcDgMgAA4EIAEIHAQg
ABJ9BSAAEoCBBiABEoCFHAQgAQEcBgADDg4ODgQgABJFBQACDg4OBSAAEoCNAgYOCCAFAggODg4I
CAcEAggRSRFNBgACAg4QCAUgAg4ICAQAAQgOBiADAQgICAQAABFJBwACAhFJEUkIAAIRTRFJEUkD
IAAICwcGElESVR0OCA4OBSAAEoCVCAABEoCZEYCdCSACEoChDhKAmQMgABwGAAIdDg4OBCABDggF
IAASgK0EIAARSQYgARJBHRwIIAUBCA4ODggFIAASgLUHIAIBDhKAtQi3elxWGTTgiQiJhF3NgIDM
kQQAAAAABAEAAAADBhI9AwYSZQMGEmkDBhIQAgYIAwYRFAQgAQIOBCAAElEEAAASZQQAABJpBQAB
ARJpBAAAEhADAAABBAgAEmUECAASaQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0
aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF84NDdjNzIxNDg4Y2Y0NjkwODEwMjg4NTQ1OTMxYWJm
MQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE2AABHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9u
PXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQAALQAAADOyu++
AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNp
b249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRl
MDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFE
ULQAAADINwAAAAAAAAAAAADiNwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1DcAAAAAAAAAAAAA
AABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAKx/gxcAAAEArH+DFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8AOAA0ADcAYwA3ADIAMQA0ADgAOABjAGYANAA2ADkAMAA4ADEAMAAyADgAOAA1ADQANQA5
ADMAMQBhAGIAZgAxAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYA
MAAxADkALgAzADIANgA4ADQAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8AOAA0ADcAYwA3ADIAMQA0ADgAOABjAGYANAA2ADkAMAA4ADEAMAAyADgAOAA1ADQANQA5ADMA
MQBhAGIAZgAxAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwA4ADQANwBjADcAMgAxADQAOAA4AGMAZgA0ADYAOQAwADgAMQAwADIAOAA4ADUA
NAA1ADkAMwAxAGEAYgBmADEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8AOAA0ADcAYwA3ADIAMQA0ADgAOABjAGYANAA2ADkAMAA4ADEAMAAyADgAOAA1ADQA
NQA5ADMAMQBhAGIAZgAxAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA2ADAAMQA5AC4AMwAyADYAOAA0AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA2ADAAMQA5AC4AMwAyADYAOAA0AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAPQ3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{31428171-DD6C-4E0E-B4B6-FD19ABC97B27}"
      DTS:From="Package\Read Excel Filenames Script Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Foreach Excel File Loop Container"
      DTS:Value="2" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="195,51"
          Id="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task"
          TopLeft="75.5,85.5" />
        <NodeLayout
          Size="158,42"
          Id="Package\Foreach Excel File Loop Container\Archive an Excel File System Task"
          TopLeft="77,172" />
        <NodeLayout
          Size="222,42"
          Id="Package\Foreach Excel File Loop Container\Set YearMonth Var Script Task"
          TopLeft="66,10" />
        <EdgeLayout
          Id="Package\Foreach Excel File Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="173,136.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-17,35.5"
              Start="0,0"
              End="-17,28">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.75"
                    Point2="0,17.75"
                    Point3="-4,17.75" />
                  <mssgle:LineSegment
                    End="-13,17.75" />
                  <mssgle:CubicBezierSegment
                    Point1="-13,17.75"
                    Point2="-17,17.75"
                    Point3="-17,21.75" />
                  <mssgle:LineSegment
                    End="-17,28" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Excel File Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="131.5,52">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="41.5,33.5"
              Start="0,0"
              End="41.5,26">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.75"
                    Point2="0,16.75"
                    Point3="4,16.75" />
                  <mssgle:LineSegment
                    End="37.5,16.75" />
                  <mssgle:CubicBezierSegment
                    Point1="37.5,16.75"
                    Point2="41.5,16.75"
                    Point3="41.5,20.75" />
                  <mssgle:LineSegment
                    End="41.5,26" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="507,321"
          Size="507,364"
          Id="Package\Foreach Excel File Loop Container"
          TopLeft="69.5,176.5" />
        <NodeLayout
          Size="135,55"
          Id="Package\Read Excel Filenames Script Task"
          TopLeft="116,49" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="183.5,104">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="139.5,72.5"
              Start="0,0"
              End="139.5,65">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.25" />
                  <mssgle:CubicBezierSegment
                    Point1="0,32.25"
                    Point2="0,36.25"
                    Point3="4,36.25" />
                  <mssgle:LineSegment
                    End="135.5,36.25" />
                  <mssgle:CubicBezierSegment
                    Point1="135.5,36.25"
                    Point2="139.5,36.25"
                    Point3="139.5,40.25" />
                  <mssgle:LineSegment
                    End="139.5,65" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="44.445546875,41.25,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="175,52"
          Id="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Transform each player row Script Component"
          TopLeft="163,355" />
        <NodeLayout
          Size="179,58"
          Id="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination"
          TopLeft="140,446" />
        <NodeLayout
          Size="244,42"
          Id="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report"
          TopLeft="90,149" />
        <EdgeLayout
          Id="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task.Paths[Output 0]"
          TopLeft="250.5,407">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-21,39"
              Start="0,0"
              End="-21,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.5"
                    Point2="0,19.5"
                    Point3="-4,19.5" />
                  <mssgle:LineSegment
                    End="-17,19.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-17,19.5"
                    Point2="-21,19.5"
                    Point3="-21,23.5" />
                  <mssgle:LineSegment
                    End="-21,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="156,42"
          Id="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Data Conversion"
          TopLeft="139.5,243.5" />
        <EdgeLayout
          Id="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task.Paths[Excel Source Output]"
          TopLeft="214.75,191">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52.5"
              Start="0,0"
              End="0,45">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task.Paths[Data Conversion Output]"
          TopLeft="217.5,285.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="33,69.5"
              Start="0,0"
              End="33,62">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.75"
                    Point2="0,34.75"
                    Point3="4,34.75" />
                  <mssgle:LineSegment
                    End="29,34.75" />
                  <mssgle:CubicBezierSegment
                    Point1="29,34.75"
                    Point2="33,34.75"
                    Point3="33,38.75" />
                  <mssgle:LineSegment
                    End="33,62" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Insert into PlayerRevRpt ADO NET Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Excel File Loop Container\Process an Excel File Data Flow Task\Everymatrix Monthly Losses Report">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>