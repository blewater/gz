@model gzDAL.Models.EmailTemplate

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="admin admin-create admin-actions">
    <div class="container">
        <div class="row">
            <div class="col-md-8 col-md-offset-2 create-interface">

                <div class="col-md-12 text-center">
                    <div class="row heading">
                        <h2 class="text-gz">Create</h2>
                        <h4>EmailTemplate</h4>
                    </div>
                </div>

                <div class="col-md-12 bg-gz">
                    <div class="row content">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="col-xs-8 col-xs-offset-2">
                                <div class="form-horizontal">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <textarea class="form-control" rows=10 data-editor="html" name="Body"></textarea>
                                            @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-offset-2 col-md-10">
                                            <input type="submit" value="Create" class="btn btn-default" />
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <div class="col-md-12">
                                <div class="row">
                                    @Html.ActionLink("Back to List", "Index")
                                </div>
                            </div>
                        }



                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.2.3/ace.js"></script>
    <script>
        // Hook up ACE editor to all textareas with data-editor attribute
        $(function () {
            $('textarea[data-editor]').each(function () {
                var textarea = $(this);

                var mode = textarea.data('editor');

                var editDiv = $('<div>', {
                    position: 'absolute',
                    width: textarea.width(),
                    height: textarea.height(),
                    'class': textarea.attr('class')
                }).insertBefore(textarea);

                textarea.css('display', 'none');

                var editor = ace.edit(editDiv[0]);
                editor.renderer.setShowGutter(false);
                editor.getSession().setValue(textarea.val());
                editor.getSession().setMode("ace/mode/" + mode);
                // editor.setTheme("ace/theme/idle_fingers");

                // copy back to textarea on form submit...
                textarea.closest('form').submit(function () {
                    textarea.val(editor.getSession().getValue());
                })

            });
        });
    </script>
}