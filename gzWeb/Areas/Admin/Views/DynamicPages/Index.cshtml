@model gzWeb.Areas.Admin.Models.DynamicViewModel

@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="admin admin-dynamic">

    <article>
        <div class="container-fluid">
            <div class="admin-table dynamic-table">
                <div class="table-head">
                    <div class="row">
                        <div class="col-md-12">
                            <h3 class="text-center">Dynamic Pages</h3>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12 table-controls">
                            @using (Html.BeginForm("Index", "DynamicPages", new { Area = "Admin" }, FormMethod.Get))
                            {
                                <div class="row">
                                    <div class="col-md-12 create-new">
                                        <p>
                                            @Html.ActionLink("Create New", "Create")
                                        </p>
                                    </div>
                                </div>

                                <div class="col-md-7 filters-form">
                                    <div class="row">
                                        <input type="hidden" name="page" value="1" />
                                        <input type="hidden" name="pageSize" value="20" />
                                        <div class="col-md-4 form-group date">
                                            <input type="text" class="form-control" placeholder="Search by Code" name="searchTerm" value="@Model.SearchTerm" />
                                        </div>

                                        <div class="col-md-2 form-group">
                                            <button type="submit" class="btn btn-gz">Search</button>
                                        </div>
                                    </div>
                                </div>

                            }

                            <div class="col-md-5 admin-pagination">
                                <nav style="@(Model.TotalPages <= 1 ? "display:none": "")">
                                    <ul class="pagination">
                                        <li class="@(Model.CurrentPage==1 ? "disabled": "")">
                                            <a href="@(Model.CurrentPage==1 ? "#":Url.Action("Index", "DynamicPages", new { Area = "Admin", page = Model.CurrentPage - 1, searchTerms = Model.SearchTerm }))" aria-label="Previous">
                                                <span aria-hidden="true">&laquo;</span>
                                            </a>
                                        </li>
                                        @for (var i = 1; i <= (int)Math.Min(Model.TotalPages, 8); i++)
                                        {
                                            <li class="@(Model.CurrentPage==i ? "active" : "")">
                                                <a href="@Url.Action("Index", "DynamicPages", new { Area = "Admin", page =i, searchTerms = Model.SearchTerm })" aria-label="@i">
                                                    <span aria-hidden="true">@i</span>
                                                </a>
                                            </li>
                                        }
                                        <li class="@(Model.CurrentPage== Model.TotalPages ? "disabled": "")">
                                            <a href="@Url.Action("Index", "DynamicPages", new { Area = "Admin", page = Model.CurrentPage + 1, searchTerms = Model.SearchTerm })" aria-label="Previous">
                                                <span aria-hidden="true">&raquo;</span>
                                            </a>
                                        </li>
                                    </ul>
                                </nav>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-12 table-interface">
                    <div class="row">
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th class="col-md-1 text-center">
                                        Id
                                    </th>
                                    <th class="col-md-1 text-center">
                                        Code
                                    </th>
                                    <th class="col-md-1 text-center">
                                        Category
                                    </th>
                                    <th class="col-md-1 text-center">
                                        Live
                                    </th>
                                    <th class="col-md-1 text-center">
                                        LiveFrom
                                    </th>
                                    <th class="col-md-1 text-center">
                                        LiveTo
                                    </th>
                                    <th class="col-md-4 text-center">
                                        Html
                                    </th>
                                    <th class="col-md-1"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.DynamicEntries)
                                {
                                    <tr>
                                        <td class="text-center">
                                            @Html.DisplayFor(modelItem => item.Id)
                                        </td>
                                        <td class="text-center">
                                            @Html.DisplayFor(modelItem => item.Code)
                                        </td>
                                        <td class="text-center">
                                            @Html.DisplayFor(modelItem => item.Category)
                                        </td>
                                        <td class="text-center">
                                            @Html.DisplayFor(modelItem => item.Live)
                                        </td>
                                        <td class="text-center">
                                            @Html.DisplayFor(modelItem => item.LiveFrom)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.LiveTo)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Html)
                                        </td>
                                        <td class="text-center">
                                            @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                                            @Html.ActionLink("Details", "Details", new { id = item.Id })
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </article>

</div>
